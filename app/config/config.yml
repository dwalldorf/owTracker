imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

parameters:
    locale: en

framework:
    #esi:             ~
    #translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    serializer:      { enable_annotations: true }
    templating:
        engines: ['php']
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        handler_id:     session.handler.memcache
    fragments:       ~
    http_method_override: true
    assets: ~

doctrine_mongodb:
    connections:
        default:
            server: "%mongo_server%"
            options: {}
    default_database: "%mongo_database%"
    document_managers:
        default:
            auto_mapping: true
            metadata_cache_driver:
                type: memcache
                class: Doctrine\Common\Cache\MemcacheCache
                host: "%session_memcache_host%"
                port: "%session_memcache_port%"
                instance_class: Memcache

lsw_memcache:
    session:
        pool: default
    pools:
        default:
            servers:
                - { host: "%session_memcache_host%", tcp_port: "%session_memcache_port%" }

old_sound_rabbit_mq:
    connections:
        default:
            host:     'localhost'
            port:     5672
            user:     'guest'
            password: 'guest'
            vhost:    '/'
            lazy:     true
            connection_timeout: 3
            read_write_timeout: 3
    producers:
        demo_upload:
            connection: default
            exchange_options: { name: 'demo-upload', type: direct }
            queue_options:    { name: 'demo-upload' }
        demo_info_upload: # for testing / inserting dummy messages only
            connection: default
            exchange_options: { name: 'demo_info_upload', type: direct }
            queue_options:    { name: 'demo_info_upload' }
    consumers:
        demo_info_upload:
            connection: default
            exchange_options: { name: 'demo_info_upload', type: direct }
            queue_options:    { name: 'demo_info_upload' }
            callback:         demo.demo_info_consumer
            idle_timeout:     100

swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }
