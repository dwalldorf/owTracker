# Learn more about services, parameters and containers at
# http://symfony.com/doc/current/book/service_container.html
parameters:

services:
    memcached:
        class: Memcached
        calls:
            - [ addServers, [ %memcached.servers% ]]
    session.memcached:
        class: Memcached
        arguments:
            persistent_id: %session_memcached_prefix%
        calls:
            - [ addServer, [ %session_memcached_host%, %session_memcached_port% ]]
    session.handler.memcached:
        class: Symfony\Component\HttpFoundation\Session\Storage\Handler\MemcachedSessionHandler
        arguments: ["@session.memcached", { prefix: %session_memcached_prefix%, expiretime: %session_memcached_expire% }]

    app.exception_listener:
        class: AppBundle\Exception\ApiExceptionListener
        tags:
            - { name: kernel.event_listener, event: kernel.exception }

    app.base_service:
        class: AppBundle\Service\BaseService
        abstract: true
        calls:
            - [setContainer, ["@service_container"]]

    user.user_service:
        class: UserBundle\Service\UserService
        parent: app.base_service

    overwatch.overwatch_service:
        class: OverwatchBundle\Service\OverwatchService
        parent: app.base_service
    overwatch.user_score_service:
        class: OverwatchBundle\Service\UserScoreService
        parent: app.base_service

    feedback.feedback_service:
        class: FeedbackBundle\Service\FeedbackService
        parent: app.base_service